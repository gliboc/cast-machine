(* mutual tail recursive functions example *)
(* very slow execution *)
let rec p = fun n ->
    (
    if n = 0 then `false % ?
        else (snd (p (n-1)) % ?), 
    if n = 0 then `true
        else (fst (p (n-1)) % Bool)
    ) in
let odd = fun n -> fst (p n) in
let even = fun n -> snd (p n) in 
odd 20;;

(** `false = `false **)
